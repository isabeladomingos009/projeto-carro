import*as api from"./modules/api-service.js";import*as ui from"./modules/ui-manager.js";function init(){setupAuthListeners();checkLoginState()}function checkLoginState(){const token=localStorage.getItem("token");ui.hideAllContentSections();if(token){ui.updateNav(!0);setupAppListeners();navigateToView("garagem")}else{ui.updateNav(!1);ui.showSection("login-section")}}function setupAuthListeners(){document.getElementById("form-login").addEventListener("submit",handleLogin);document.getElementById("form-register").addEventListener("submit",handleRegister);document.getElementById("show-register").addEventListener("click",e=>{e.preventDefault();ui.hideAllContentSections();ui.showSection("register-section")});document.getElementById("show-login").addEventListener("click",e=>{e.preventDefault();ui.hideAllContentSections();ui.showSection("login-section")})}
async function handleLogin(e){e.preventDefault();try{const data=await api.login(e.target.email.value,e.target.password.value);localStorage.setItem("token",data.token);window.location.reload()}catch(error){ui.showNotification(error.message,"error")}}
async function handleRegister(e){e.preventDefault();try{await api.register(e.target.email.value,e.target.password.value);ui.showNotification("Registro bem-sucedido! Faça o login.","success");ui.hideAllContentSections();ui.showSection("login-section")}catch(error){ui.showNotification(error.message,"error")}}
function setupAppListeners(){document.getElementById("form-add-veiculo").addEventListener("submit",handleAddVeiculo);document.getElementById("main-navigation").addEventListener("click",e=>{if(e.target.matches(".nav-button[data-view]")){navigateToView(e.target.dataset.view)}});document.getElementById("veiculos-list").addEventListener("click",e=>{const button=e.target.closest(".card__button[data-veiculo-id]");if(button){navigateToView("detalhes-veiculo",button.dataset.veiculoId)}});document.getElementById("btn-voltar-garagem").addEventListener("click",()=>navigateToView("garagem"));document.getElementById("detalhes-veiculo-container").addEventListener("submit",e=>{if(e.target.id==="form-share-veiculo"){handleShareVeiculo(e)}});document.getElementById("verificar-clima-btn").addEventListener("click",handleVerificarClimaClick)}
async function navigateToView(viewName,veiculoId=null){ui.hideAllContentSections();document.querySelectorAll("#main-navigation .nav-button").forEach(btn=>btn.classList.remove("active"));const activeBtn=document.querySelector(`#main-navigation .nav-button[data-view="${viewName}"]`);if(activeBtn){activeBtn.classList.add("active")}if(viewName==="garagem"){ui.showSection("garagem-principal-section");await carregarVeiculos()}else if(viewName==="detalhes-veiculo"&&veiculoId){ui.showSection("detalhes-veiculo-section");await carregarDetalhesVeiculo(veiculoId)}else if(viewName==="planejar"){ui.showSection("planejador-viagem-container")}}
async function handleAddVeiculo(event){event.preventDefault();const form=event.target;const formData=new FormData(form);const veiculoData=Object.fromEntries(formData.entries());veiculoData.maxVelocidade=Number(veiculoData.maxVelocidade);try{await api.createVeiculo(veiculoData);ui.showNotification("Veículo adicionado com sucesso!","success");form.reset();await carregarVeiculos()}catch(error){ui.showNotification(error.message,"error")}}
async function carregarVeiculos(){ui.toggleLoader("veiculos-loader",!0);try{const veiculos=await api.getVeiculos();ui.renderVeiculos(veiculos)}catch(error){document.getElementById("veiculos-list").innerHTML=`<p class="error-message">Não foi possível carregar.</p>`}finally{ui.toggleLoader("veiculos-loader",!1)}}
async function carregarDetalhesVeiculo(veiculoId){const container=document.getElementById("detalhes-veiculo-container");container.innerHTML='<p class="loading-message">Carregando...</p>';try{const veiculo=await api.getVeiculoById(veiculoId);ui.renderVeiculoDetalhes(veiculo,container)}catch(error){ui.showNotification(error.message,"error");navigateToView("garagem")}}
async function handleShareVeiculo(event){event.preventDefault();const form=event.target;const veiculoId=form.dataset.veiculoId;const email=form.email.value;try{const response=await api.shareVeiculo(veiculoId,email);ui.showNotification(response.message,"success");form.reset()}catch(error){ui.showNotification(error.message,"error")}}
async function handleVerificarClimaClick(){const destinoInput=document.getElementById("destino-viagem");const nomeCidade=destinoInput.value.trim();if(!nomeCidade){ui.showNotification("Digite uma cidade.","error");return}ui.displayClimaLoading(!0);try{const dadosApi=await api.getClima(nomeCidade);const previsaoProcessada=processarDadosForecast(dadosApi);if(previsaoProcessada){ui.renderPrevisaoDetalhada(previsaoProcessada,dadosApi.city.name)}else{ui.displayClimaError("Não foi possível processar os dados.")}}catch(error){ui.displayClimaError(error.message)}}
function processarDadosForecast(dataApi){if(!dataApi||!dataApi.list)return null;const previsoesPorDia={};dataApi.list.forEach(item=>{const diaStr=item.dt_txt.split(" ")[0];if(!previsoesPorDia[diaStr]){previsoesPorDia[diaStr]={temps:[],weathers:[]}}previsoesPorDia[diaStr].temps.push(item.main.temp);previsoesPorDia[diaStr].weathers.push(item.weather[0])});return Object.keys(previsoesPorDia).map(dia=>{const diaData=previsoesPorDia[dia];const weatherRep=diaData.weathers[Math.floor(diaData.weathers.length/2)];return{data:dia,temp_min:Math.min(...diaData.temps),temp_max:Math.max(...diaData.temps),descricao:weatherRep.description,icone:weatherRep.icon}}).slice(0,5)}document.addEventListener("DOMContentLoaded",init);